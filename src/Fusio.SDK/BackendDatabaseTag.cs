/**
 * BackendDatabaseTag automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */


using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using RestSharp;
using Sdkgen.Client;
using Sdkgen.Client.Exception;

namespace Fusio.SDK;

public class BackendDatabaseTag : TagAbstract {
    public BackendDatabaseTag(RestClient httpClient, Parser parser): base(httpClient, parser)
    {
    }


    public async Task<CommonMessage> DeleteRow(string connectionId, string tableName, string id)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("connection_id", connectionId);
        pathParams.Add("table_name", tableName);
        pathParams.Add("id", id);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database/:connection_id/:table_name/rows/:id", pathParams), Method.Delete);
        this.Parser.Query(request, queryParams, queryStructNames);

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<CommonMessage>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            400 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            404 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<CommonMessage> UpdateRow(string connectionId, string tableName, string id, BackendDatabaseRow payload)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("connection_id", connectionId);
        pathParams.Add("table_name", tableName);
        pathParams.Add("id", id);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database/:connection_id/:table_name/rows/:id", pathParams), Method.Put);
        this.Parser.Query(request, queryParams, queryStructNames);
        request.AddJsonBody(JsonSerializer.Serialize(payload));

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<CommonMessage>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            400 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            404 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<CommonMessage> CreateRow(string connectionId, string tableName, BackendDatabaseRow payload)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("connection_id", connectionId);
        pathParams.Add("table_name", tableName);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database/:connection_id/:table_name/rows", pathParams), Method.Post);
        this.Parser.Query(request, queryParams, queryStructNames);
        request.AddJsonBody(JsonSerializer.Serialize(payload));

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<CommonMessage>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            400 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            404 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<BackendDatabaseRow> GetRow(string connectionId, string tableName, string id)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("connection_id", connectionId);
        pathParams.Add("table_name", tableName);
        pathParams.Add("id", id);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database/:connection_id/:table_name/rows/:id", pathParams), Method.Get);
        this.Parser.Query(request, queryParams, queryStructNames);

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<BackendDatabaseRow>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            404 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<BackendDatabaseRows> GetRows(string connectionId, string tableName, int startIndex, int count, string filterBy, string filterOp, string filterValue, string sortBy, string sortOrder, string columns)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("connection_id", connectionId);
        pathParams.Add("table_name", tableName);

        Dictionary<string, object> queryParams = new();
        queryParams.Add("startIndex", startIndex);
        queryParams.Add("count", count);
        queryParams.Add("filterBy", filterBy);
        queryParams.Add("filterOp", filterOp);
        queryParams.Add("filterValue", filterValue);
        queryParams.Add("sortBy", sortBy);
        queryParams.Add("sortOrder", sortOrder);
        queryParams.Add("columns", columns);

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database/:connection_id/:table_name/rows", pathParams), Method.Get);
        this.Parser.Query(request, queryParams, queryStructNames);

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<BackendDatabaseRows>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            404 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<CommonMessage> DeleteTable(string connectionId, string tableName)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("connection_id", connectionId);
        pathParams.Add("table_name", tableName);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database/:connection_id/:table_name", pathParams), Method.Delete);
        this.Parser.Query(request, queryParams, queryStructNames);

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<CommonMessage>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            400 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            404 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<CommonMessage> UpdateTable(string connectionId, string tableName, BackendDatabaseTable payload)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("connection_id", connectionId);
        pathParams.Add("table_name", tableName);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database/:connection_id/:table_name", pathParams), Method.Put);
        this.Parser.Query(request, queryParams, queryStructNames);
        request.AddJsonBody(JsonSerializer.Serialize(payload));

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<CommonMessage>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            400 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            404 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<CommonMessage> CreateTable(string connectionId, BackendDatabaseTable payload)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("connection_id", connectionId);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database/:connection_id", pathParams), Method.Post);
        this.Parser.Query(request, queryParams, queryStructNames);
        request.AddJsonBody(JsonSerializer.Serialize(payload));

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<CommonMessage>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            400 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            404 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<BackendDatabaseTable> GetTable(string connectionId, string tableName)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("connection_id", connectionId);
        pathParams.Add("table_name", tableName);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database/:connection_id/:table_name", pathParams), Method.Get);
        this.Parser.Query(request, queryParams, queryStructNames);

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<BackendDatabaseTable>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            404 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<BackendDatabaseTables> GetTables(string connectionId)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("connection_id", connectionId);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database/:connection_id", pathParams), Method.Get);
        this.Parser.Query(request, queryParams, queryStructNames);

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<BackendDatabaseTables>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            404 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<BackendDatabaseConnections> GetConnections()
    {
        Dictionary<string, object> pathParams = new();

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/backend/database", pathParams), Method.Get);
        this.Parser.Query(request, queryParams, queryStructNames);

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<BackendDatabaseConnections>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            401 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            500 => new CommonMessageException(this.Parser.Parse<CommonMessage>(response.Content)),
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }


}
